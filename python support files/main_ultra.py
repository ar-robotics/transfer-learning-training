import matplotlib.pyplot as plt
import numpy as np


total_epochs = np.array(
    [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
    ]
)
total_loss = np.array(
    [
        5.5539,
        1.4140,
        1.0666,
        0.7923,
        0.6459,
        0.5366,
        0.4647,
        0.4246,
        0.3744,
        0.3322,
        0.3027,
        0.2860,
        0.2867,
        0.2719,
        0.2637,
        0.2635,
        0.2324,
        0.2134,
        0.2082,
        0.2218,
        0.1997,
        0.1840,
        0.1805,
        0.1857,
        0.1765,
        0.1729,
        0.1663,
        0.1546,
        0.1697,
        0.1397,
        0.1565,
        0.1567,
        0.1513,
        0.1542,
        0.1538,
        0.1664,
        0.1573,
        0.1532,
        0.1606,
        0.1513,
        0.1246,
        0.1398,
        0.1540,
        0.1439,
        0.1295,
        0.1232,
        0.1373,
        0.1264,
        0.1150,
        0.1220,
    ]
)
cls_loss = np.array(
    [
        5.0689,
        0.9963,
        0.7319,
        0.5153,
        0.4111,
        0.3336,
        0.2861,
        0.2553,
        0.2220,
        0.1918,
        0.1724,
        0.1590,
        0.1623,
        0.1500,
        0.1426,
        0.1430,
        0.1228,
        0.1092,
        0.1064,
        0.1132,
        0.0994,
        0.0892,
        0.0864,
        0.0869,
        0.0827,
        0.0803,
        0.0763,
        0.0672,
        0.0785,
        0.0575,
        0.0683,
        0.0673,
        0.0644,
        0.0650,
        0.0668,
        0.0734,
        0.0672,
        0.0651,
        0.0705,
        0.0626,
        0.0447,
        0.0560,
        0.0636,
        0.0594,
        0.0500,
        0.0435,
        0.0528,
        0.0471,
        0.0390,
        0.0444,
    ]
)
box_loss = np.array(
    [
        0.0086,
        0.0073,
        0.0056,
        0.0044,
        0.0036,
        0.0030,
        0.0025,
        0.0023,
        0.0019,
        0.0017,
        0.0015,
        0.0014,
        0.0014,
        0.0013,
        0.0013,
        0.0013,
        0.0011,
        9.8348e-04,
        9.3268e-04,
        0.0011,
        9.0553e-04,
        7.9451e-04,
        7.8160e-04,
        8.7382e-04,
        7.7420e-04,
        7.5035e-04,
        6.9876e-04,
        6.4627e-04,
        7.2384e-04,
        5.4149e-04,
        6.6409e-04,
        6.8615e-04,
        6.3685e-04,
        6.8252e-04,
        6.3997e-04,
        7.5846e-04,
        7.0088e-04,
        6.6092e-04,
        7.0036e-04,
        6.7240e-04,
        4.9650e-04,
        5.7322e-04,
        7.0673e-04,
        5.8977e-04,
        4.8739e-04,
        4.9310e-04,
        5.8935e-04,
        4.8371e-04,
        4.1917e-04,
        4.5080e-04,
    ]
)
print(len(box_loss))
model_loss = np.array(
    [
        5.4989,
        1.3590,
        1.0116,
        0.7373,
        0.5909,
        0.4816,
        0.4097,
        0.3695,
        0.3193,
        0.2772,
        0.2476,
        0.2310,
        0.2316,
        0.2169,
        0.2086,
        0.2084,
        0.1774,
        0.1583,
        0.1531,
        0.1667,
        0.1446,
        0.1289,
        0.1254,
        0.1306,
        0.1214,
        0.1178,
        0.1112,
        0.0995,
        0.1146,
        0.0846,
        0.1015,
        0.1016,
        0.0962,
        0.0992,
        0.0988,
        0.1113,
        0.1023,
        0.0981,
        0.1055,
        0.0963,
        0.0696,
        0.0847,
        0.0989,
        0.0889,
        0.0822,
        0.0681,
        0.0744,
        0.0822,
        0.0713,
        0.0600,
    ]
)
val_total_loss = np.array(
    [
        0.9363,
        0.8953,
        0.7628,
        0.7328,
        0.6905,
        0.7232,
        0.6277,
        0.6450,
        0.6304,
        0.6299,
        0.6212,
        0.6604,
        0.6459,
        0.6581,
        0.6696,
        0.6855,
        0.6480,
        0.6621,
        0.6903,
        0.6749,
        0.7200,
        0.6921,
        0.7082,
        0.6867,
        0.7415,
        0.7285,
        0.7476,
        0.7373,
        0.7531,
        0.7550,
        0.7491,
        0.7558,
        0.7492,
        0.7594,
        0.7570,
        0.7462,
        0.7874,
        0.7869,
        0.8196,
        0.7682,
        0.7928,
        0.7915,
        0.7714,
        0.7729,
        0.8151,
        0.8123,
        0.8149,
        0.8273,
        0.8211,
        0.8413,
    ]
)
val_cls_loss = np.array(
    [
        0.6694,
        0.5793,
        0.4543,
        0.4268,
        0.3907,
        0.4060,
        0.3230,
        0.3381,
        0.3183,
        0.3126,
        0.3095,
        0.3332,
        0.3168,
        0.3326,
        0.3476,
        0.3601,
        0.3302,
        0.3383,
        0.3633,
        0.3500,
        0.3815,
        0.3703,
        0.3831,
        0.3708,
        0.4111,
        0.3985,
        0.4172,
        0.4090,
        0.4228,
        0.4281,
        0.4211,
        0.4182,
        0.4168,
        0.4234,
        0.4212,
        0.4087,
        0.4395,
        0.4541,
        0.4710,
        0.4303,
        0.4596,
        0.4526,
        0.4324,
        0.4394,
        0.4674,
        0.4680,
        0.4747,
        0.4877,
        0.4762,
        0.4963,
    ]
)
val_box_loss = np.array(
    [
        0.0042,
        0.0052,
        0.0051,
        0.0050,
        0.0049,
        0.0052,
        0.0050,
        0.0050,
        0.0051,
        0.0052,
        0.0051,
        0.0054,
        0.0055,
        0.0054,
        0.0053,
        0.0054,
        0.0053,
        0.0054,
        0.0054,
        0.0054,
        0.0057,
        0.0053,
        0.0054,
        0.0052,
        0.0055,
        0.0055,
        0.0055,
        0.0055,
        0.0055,
        0.0054,
        0.0055,
        0.0057,
        0.0056,
        0.0057,
        0.0056,
        0.0056,
        0.0055,
        0.0059,
        0.0056,
        0.0057,
        0.0056,
        0.0057,
        0.0057,
        0.0056,
        0.0057,
        0.0058,
        0.0057,
        0.0057,
        0.0058,
        0.0058,
    ]
)
val_model_loss = np.array(
    [
        0.8813,
        0.8404,
        0.7078,
        0.6778,
        0.6355,
        0.6682,
        0.5727,
        0.5900,
        0.5754,
        0.5748,
        0.5662,
        0.6053,
        0.5908,
        0.6031,
        0.6145,
        0.6304,
        0.5929,
        0.6071,
        0.6352,
        0.6198,
        0.6649,
        0.6371,
        0.6531,
        0.6316,
        0.6864,
        0.6735,
        0.6925,
        0.6823,
        0.6980,
        0.6999,
        0.6940,
        0.7008,
        0.6942,
        0.7043,
        0.7020,
        0.6911,
        0.7323,
        0.7318,
        0.7646,
        0.7131,
        0.7377,
        0.7364,
        0.7164,
        0.7179,
        0.7600,
        0.7573,
        0.7598,
        0.7723,
        0.7661,
        0.7863,
    ]
)

fig, axs = plt.subplots(2, 4, figsize=(20, 10))

# Total loss
axs[0, 0].plot(total_epochs, total_loss, label="total_loss")
axs[0, 0].set_title("Total Loss")
axs[0, 0].set_xlabel("Epochs")
axs[0, 0].set_ylabel("Loss")
axs[0, 0].legend()

# Classification loss
axs[0, 1].plot(total_epochs, cls_loss, label="cls_loss", color="orange")
axs[0, 1].set_title("Classification Loss")
axs[0, 1].set_xlabel("Epochs")
axs[0, 1].set_ylabel("Loss")
axs[0, 1].legend()

# Box loss
axs[0, 2].plot(total_epochs, box_loss, label="box_loss", color="green")
axs[0, 2].set_title("Box Loss")
axs[0, 2].set_xlabel("Epochs")
axs[0, 2].set_ylabel("Loss")
axs[0, 2].legend()

# Model loss
axs[0, 3].plot(total_epochs, model_loss, label="model_loss", color="red")
axs[0, 3].set_title("Model Loss")
axs[0, 3].set_xlabel("Epochs")
axs[0, 3].set_ylabel("Loss")
axs[0, 3].legend()

# Validation total loss
axs[1, 0].plot(total_epochs, val_total_loss, label="val_total_loss", color="purple")
axs[1, 0].set_title("Validation Total Loss")
axs[1, 0].set_xlabel("Epochs")
axs[1, 0].set_ylabel("Loss")
axs[1, 0].legend()

# Validation classification loss
axs[1, 1].plot(total_epochs, val_cls_loss, label="val_cls_loss", color="cyan")
axs[1, 1].set_title("Validation Classification Loss")
axs[1, 1].set_xlabel("Epochs")
axs[1, 1].set_ylabel("Loss")
axs[1, 1].legend()

# Validation box loss
axs[1, 2].plot(total_epochs, val_box_loss, label="val_box_loss", color="magenta")
axs[1, 2].set_title("Validation Box Loss")
axs[1, 2].set_xlabel("Epochs")
axs[1, 2].set_ylabel("Loss")
axs[1, 2].legend()

# Validation model loss
axs[1, 3].plot(total_epochs, val_model_loss, label="val_model_loss", color="yellow")
axs[1, 3].set_title("Validation Model Loss")
axs[1, 3].set_xlabel("Epochs")
axs[1, 3].set_ylabel("Loss")
axs[1, 3].legend()

# Adjust layout to prevent overlap
plt.tight_layout()
plt.show()
